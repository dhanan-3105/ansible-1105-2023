demo.oci.yaml



plugin: oracle.oci.oci

regions:
 - eu-frankfurt-1

compartments:
 - compartment_ocid: "Your-compartment-id"
   fetch_hosts_from_subcompartments: false


---
- hosts: localhost
  become: true
  tasks:
    - name : create file
      file: path=/tmp/testfile state=touch
    - name : print
      debug:
       msg: file created


---
 - hosts: localhost
   become: true
   tasks:
   - name: install packages
     yum: name={{item}} state=latest
     loop:
      - openssl-devel
      - git
      - podman

---
- hosts: localhost
  become: true
  tasks:
  - name : install http
    yum: name=httpd state=latest
  - name: start and enable httpd
    service: name=httpd state=restarted enabled=yes
  handlers:
  - name: restart apache
    service: name=httpd state=restarted
    
---  
- name: read file on host
  hosts: all
  remote_user: opc
  vars:
   contents: " "
  tasks:
   - name: Read the file
     command: cat /home/opc/.ssh/authorized_keys
     register: x

   - name: print file
     debug:
      msg: "the content of file is {{ x }}"

   - name: write a file
     file: path=/home/opc/configfiles state=touch


   - name: closure
     debug:
        msg : "file created in {{inventory_hostname}}"


---
- name: Add several users
  hosts: all
  remote_user: opc
  become: yes
  tasks:
  -  name: users
     ansible.builtin.user:
        name: "{{ item }}"
        state: present
        groups: "wheel"
     loop:
        - testuser11
        - testuser21
  -  name: print users
     debug:
        msg: "Print the users"

- name: Verify Repository
  hosts: all
  remote_user: opc
  tasks:
  - name: Add repository
    yum_repository:
     name: epel
     description: EPEL YUM repo
     baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
    become: true

  - name: Add multiple repositories into the same file (2/2)
    yum_repository:
       name: rpmforge
       description: RPMforge YUM repo
       file: external_repos
       baseurl: http://apt.sw.be/redhat/el7/en/$basearch/rpmforge
       mirrorlist: http://mirrorlist.repoforge.org/el7/mirrors-rpmforge
       enabled: no
    become: true
 # Handler showing how to clean yum metadata cache
  - name: yum-clean-metadata
    command: yum clean metadata
    args:
      warn: no

  # Example removing a repository and cleaning up metadata cache
  - name: Remove repository (and clean up left-over metadata)
    yum_repository:
     name: epel
     state: absent
    become: true

  - name: Remove repository from a specific repo file
    yum_repository:
        name: epel
        file: external_repos
        state: absent
    become: true

  - name: print details
    debug:
      msg: "Installation and uninstallation done "


- hosts: localhost
  connection: local
  become: yes
  tasks:
    - name: install podman
      command: yum install -y podman
    - name: deploy nginx podman container
      command: podman run -d  --name testnginx --privileged -p 8085:80 httpd
    - name: list all containers
      command: podman  ps -a
    - name: verify service working
      command: curl {{ansible_hostname}}:8085
    - name: remove container
      command : podman rm -f testnginx


- name : List summary
  collections:
    - oracle.oci
  connection: local
  hosts: localhost
  tasks:
   - name: List availability domains
     oci_identity_availability_domain_facts:
     # required
       compartment_id: "ocid1.tenancy.oc1..aaaaaaaahha7foqefrt7brld3bs3bijc4yu3jxrqoiaocgpkbvkpgilzi4da"
     register: result

   - name : print ADs
     debug:
       msg: {{ result }}


- name: Get namespace name
  hosts: localhost
  collections:
    - oracle.oci
  tasks:
    - name: Get namespace name
      oci_object_storage_namespace_facts:
      register: output
    - name: Print namespace name
      debug:
        msg: "{{ output }}"


---
- name : List summary of existing buckets in OCI object storage
  collections:
    - oracle.oci
  connection: local
  hosts: localhost
  vars:
    output_namespace: "sample_namespace"
  tasks:
    - name: Get namespace name
      oci_object_storage_namespace_facts:
      register: output_namespace

    - name: List bucket facts
      oci_object_storage_bucket_facts:
       namespace_name: '{{ output_namespace.namespace }}'
       compartment_id: 'put your compartment ocid'
       fields: [ "approximateCount","approximateSize","autoTiering"]

      register: result
    - name: Dump result
      debug:
        msg: '{{result}}'
